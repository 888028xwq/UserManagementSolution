# 20250708 mod by jimmy for CI/CD測試

name: .NET CI

# 當以下事件發生時觸發這個工作流程：
on:
  push:
    branches: [ main, develop ] # 當程式碼被推送到 main 或 develop 分支時
  pull_request:
    branches: [ main, develop ] # 當有針對 main 或 develop 分支的拉取請求時

# 定義要執行的作業 (Jobs)
jobs:
  build-and-test: # 作業名稱
    runs-on: ubuntu-latest # 在 Ubuntu 最新版本的主機上運行這個作業

    # 步驟 (Steps)
    steps:
    - name: Checkout code # 步驟名稱：檢查程式碼
      uses: actions/checkout@v4 # 使用 GitHub 官方提供的 checkout action，將倉庫內容拉取到 Runner 上

    - name: Setup .NET SDK ENV # 步驟名稱：設置 .NET SDK 環境
      uses: actions/setup-dotnet@v4 # 使用 GitHub 官方提供的 setup-dotnet action
      with:
        dotnet-version: '8.0.x' # 指定要使用的 .NET SDK 版本 (與您的專案目標框架一致)

    - name: Restore dependencies # 步驟名稱：恢復 NuGet 依賴
      run: dotnet restore UserManagementAPI/UserManagementAPI.csproj # 執行 dotnet restore

    - name: Build project # 步驟名稱：建置專案
      run: dotnet build UserManagementAPI/UserManagementAPI.csproj --no-restore # 執行 dotnet build，不重新恢復依賴

    - name: Run tests # 步驟名稱：運行測試
      run: dotnet test UserManagementAPI.Tests/UserManagementAPI.Tests.csproj --no-build --verbosity normal
      # --no-build: 不重新建置測試專案，因為我們已經建置過主專案
      # --verbosity normal: 顯示正常的測試輸出，方便查看結果